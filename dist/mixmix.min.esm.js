const t=Object.getOwnPropertyNames(class{}).concat("name"),o=["constructor"],n={constructorIndex:null,isUsingSameParamsIntoConstructors:null};function e(...r){let c=r;const{isUsingSameParamsIntoConstructors:i,constructorIndex:a}=e.options;null!=a&&(c=[r[a]]);class p{constructor(...t){const o=c.map((t=>t?.name)),n=!!i||null!=a,e=n?o:Object.keys(t[0]??{});for(let s=0,r=e.length;s<r;++s){const r=e[s],i=n?s:o.indexOf(r);-1!==i&&Object.defineProperties(this,Object.getOwnPropertyDescriptors(new c[i](...n?t??[]:t[0][r]??[])))}}}e.options={...n};const l=r.map((t=>t.name)).join("");Object.defineProperty(p,"name",{value:l});for(let n=0,e=r.length;n<e;++n){const e=r[n];s(p,e,t),e.prototype&&s(p.prototype,e.prototype,o)}return p}function s(t,o,n){const e=Object.getOwnPropertyDescriptors(o),s=Object.keys(e);for(let o=0,r=s.length;o<r;++o){const r=s[o];-1===n.indexOf(r)&&Object.defineProperty(t,r,e[r])}}e.constructorIndex=null,e.options={...n},e.withConstructorAt=(t=0,...o)=>(e.options.constructorIndex=t,e(...o)),e.withSameParamsIntoConstructors=(...t)=>(e.options.isUsingSameParamsIntoConstructors=!0,e(...t)),e.withOptions=(t,...o)=>(e.options=t,e(...o));export default e;
//# sourceMappingURL=mixmix.min.esm.js.map
